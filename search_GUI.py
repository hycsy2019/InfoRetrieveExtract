# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


import sys
from PyQt5.QtWidgets import QApplication, QMainWindow,QWidget
from PyQt5 import QtWidgets,QtCore
import build_index as bi
from word_split import GetInput
import output as op
from extract import info_extract

path='clean_data'        #存储分词后文档的目录

class widget(QWidget):
    file_num=0
    def __init__(self,file_num:int,Ext,parent=None):
        super(QWidget,self).__init__(parent)
        self.ui=Ui_extract_widget()
        self.ui.setupUi(self)
        self.file_num = file_num
        self.ui.detail_text.setText(Ext)

    def StarsUnable(self):
        self.ui.star1.setEnabled(False)
        self.ui.star2.setEnabled(False)
        self.ui.star3.setEnabled(False)
        self.ui.star4.setEnabled(False)
        self.ui.star5.setEnabled(False)

    def WriteMark(self,mark):
        f=open('extraction_rating.csv','a',encoding='utf-8')
        f.write(str(self.file_num)+','+str(mark)+'\n')
        f.close

    def mark1(self):
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")  # 一星评分
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self. WriteMark(1)


    def mark2(self):
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")  # 两星评分
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self. WriteMark(2)

    def mark3(self):
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")  # 三星评分
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(3)

    def mark4(self):
        self.ui.star4.setStyleSheet("border-image: url(:/main/img/star.png);")  # 四星评分
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(4)

    def mark5(self):
        self.ui.star5.setStyleSheet("border-image: url(:/main/img/star.png);")  # 五星评分
        self.ui.star4.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(5)

class MainWindow(QMainWindow):
    input=''        #用户输入
    input_words=[]      #用户输入分词结果列表
    Result=[]       #检索结果
    text_list ={}     #检索结果框
    file_list=[]        #所有相关文档编号
    layout_list={}     #含文本框和按钮的水平布局
    button_list={}   #抽取按钮

    def __init__(self, parent=None):
        super(QMainWindow,self).__init__(parent)
        self.ui = Ui_SearchEngine()
        self.ui.setupUi(self)
        self.HideTools()
        self.ui.total_label.hide()

    def HideTools(self):
        self.ui.star1.hide()
        self.ui.star2.hide()
        self.ui.star3.hide()
        self.ui.star4.hide()
        self.ui.star5.hide()
        self.ui.mark_label.hide()
        self.ui.extract_button1.hide()
        self.ui.total_label.hide()

    def ShowTools(self,num):
        self.ui.total_label.setText("共检索到"+str(num)+"篇文档")
        self.ui.total_label.show()
        self.StarsEnable()
        self.ui.star1.show()
        self.ui.star2.show()
        self.ui.star3.show()
        self.ui.star4.show()
        self.ui.star5.show()
        self.ui.mark_label.show()
        self.ui.extract_button1.show()

    def StarsEnable(self):
        self.ui.star1.setEnabled(True)
        self.ui.star2.setEnabled(True)
        self.ui.star3.setEnabled(True)
        self.ui.star4.setEnabled(True)
        self.ui.star5.setEnabled(True)
        self.ui.star5.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.ui.star4.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/empty_star.png);")

    def StarsUnable(self):
        self.ui.star1.setEnabled(False)
        self.ui.star2.setEnabled(False)
        self.ui.star3.setEnabled(False)
        self.ui.star4.setEnabled(False)
        self.ui.star5.setEnabled(False)

    def WriteMark(self,mark):
        f=open('search_rating.csv','a',encoding='utf-8')
        f.write(self.input+','+str(mark)+'\n')
        f.close

    def mark1(self):
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")  # 一星评分
        f=open('search_rating.csv','w',encoding='utf-8')
        f.close()
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self. WriteMark(1)

    def mark2(self):
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")  # 两星评分
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self. WriteMark(2)

    def mark3(self):
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")  # 三星评分
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(3)

    def mark4(self):
        self.ui.star4.setStyleSheet("border-image: url(:/main/img/star.png);")  # 四星评分
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(4)

    def mark5(self):
        self.ui.star5.setStyleSheet("border-image: url(:/main/img/star.png);")  # 五星评分
        self.ui.star4.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star3.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star2.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.ui.star1.setStyleSheet("border-image: url(:/main/img/star.png);")
        self.repaint()
        self.StarsUnable()  # 评分过后按钮失效
        self.WriteMark(5)

    def search(self):
        self.HideTools()
        self.input=self.ui.search_input.text()

        if self.input!='':
            self.input_words=GetInput(self.input)

            corpus=bi.BuildCorpus(path)
            print('语料构建完成')

            words, M = bi.GetTFIDF(corpus)
            print('TFIDF矩阵构建完成')

            Sim=bi.CalSim(M,self.input_words)
            print('相关度计算完成')

            self.Result,self.file_list=op.OutputDoc(Sim,1,438)
            Contents=op.OutputThings(self.input_words,self.file_list)
            for i in range(0,len(self.Result)):     #加上相关内容一项
                self.Result[i]+='【主要匹配内容】'+Contents[i]
            print('结果拷贝完成')

            if self.CreateBoxes():     #输出到UI的文本框中
                self.ShowTools(len(self.Result))  # 显示功能项

    def CreateBoxes(self):
        '''创建文本框、按钮、水平布局'''
        if len(self.text_list)!=0:      #把之前的搜索结果关闭
            for each in self.text_list.values():
                each.close()
            for each in self.button_list.values():
                each.close()

        if len(self.Result) == 0:
            self.ui.total_label.setText('呜呜呜什么都没找到，换个搜索词试试叭')
            self.ui.total_label.show()
            return False

        self.text_list[0] = self.ui.text1
        self.layout_list[0]=self.ui.horizontalLayout_4
        self.button_list[0]=self.ui.extract_button1
        button_group.addButton(self.button_list[0],0)

        for j in range(1, len(self.Result)):
            self.layout_list[j]=QtWidgets.QHBoxLayout()     #创建水平布局
            self.button_list[j]=QtWidgets.QPushButton(self.ui.scrollAreaWidgetContents)        #创建抽取按钮
            self.text_list[j]=QtWidgets.QTextBrowser(self.ui.scrollAreaWidgetContents)     #创建文本框

            '''设置按钮形状'''
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.button_list[j].sizePolicy().hasHeightForWidth())
            self.button_list[j].setSizePolicy(sizePolicy)
            self.button_list[j].setMinimumSize(QtCore.QSize(0, 100))
            self.button_list[j].setMaximumSize(QtCore.QSize(80, 100))

            self.button_list[j].setText("Extract")
            self.button_list[j].setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 170, 170);\n"
                                               "font: 9pt \"Britannic Bold\";")     #设置按钮样式

            button_group.addButton(self.button_list[j],j)     #添加按钮到按钮集合中，id为j
            self.layout_list[j].addWidget(self.button_list[j])     #将按钮加入水平布局

            '''设置文本框形状'''
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.text_list[j].sizePolicy().hasHeightForWidth())
            self.text_list[j].setSizePolicy(sizePolicy)
            self.text_list[j].setMinimumSize(QtCore.QSize(0, 200))

            self.text_list[j].setStyleSheet("background-color: rgb(255, 255, 255);\n"
                          "font: 25 11pt \"Microsoft YaHei\";")     #设置文本框样式

            self.layout_list[j].addWidget(self.text_list[j])        #将文本框加入水平布局
            self.ui.verticalLayout_4.addLayout(self.layout_list[j])        #将水平布局加入滚动区域里的垂直布局


        '''每条查询结果放在文本框中表示'''
        i=0
        for q in self.Result:
            self.text_list[i].setText(q)
            self.text_list[i].show()
            self.button_list[i].show()
            i += 1

        return True

    def extract(self, button_id):
        file_num = self.file_list[button_id]
        self.Ext = info_extract([file_num])  # 传入相关文件编号
        widget_list[file_num] = widget(file_num, self.Ext)
        widget_list[file_num].setWindowTitle('Extraction')
        widget_list[file_num].show()

class Ui_SearchEngine(object):
    def setupUi(self, SearchEngine):
        SearchEngine.setObjectName("SearchEngine")
        SearchEngine.resize(1341, 788)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(SearchEngine.sizePolicy().hasHeightForWidth())
        SearchEngine.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("等线 Light")
        SearchEngine.setFont(font)
        self.centralwidget = QtWidgets.QWidget(SearchEngine)
        self.centralwidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(300, 30, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(697, 24, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_2.addItem(spacerItem1)
        self.search_input = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_input.sizePolicy().hasHeightForWidth())
        self.search_input.setSizePolicy(sizePolicy)
        self.search_input.setMinimumSize(QtCore.QSize(500, 0))
        self.search_input.setStyleSheet("font: 25 9pt \"Microsoft YaHei\";")
        self.search_input.setObjectName("search_input")
        self.verticalLayout_2.addWidget(self.search_input)
        spacerItem2 = QtWidgets.QSpacerItem(697, 24, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_2.addItem(spacerItem2)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.search_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_button.sizePolicy().hasHeightForWidth())
        self.search_button.setSizePolicy(sizePolicy)
        self.search_button.setMinimumSize(QtCore.QSize(50, 60))
        self.search_button.setMaximumSize(QtCore.QSize(50, 60))
        self.search_button.setStyleSheet("border-image: url(:/main/img/inquire.jpg);")
        self.search_button.setText("")
        self.search_button.setObjectName("search_button")
        self.horizontalLayout_3.addWidget(self.search_button)
        spacerItem3 = QtWidgets.QSpacerItem(250, 30, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem3)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setMinimumSize(QtCore.QSize(0, 600))
        self.scrollArea.setStyleSheet("background-color:rgb(238, 238, 238)")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1315, 598))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.total_label = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.total_label.sizePolicy().hasHeightForWidth())
        self.total_label.setSizePolicy(sizePolicy)
        self.total_label.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setBold(False)
        font.setWeight(50)
        self.total_label.setFont(font)
        self.total_label.setObjectName("total_label")
        self.verticalLayout_4.addWidget(self.total_label)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.extract_button1 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.extract_button1.sizePolicy().hasHeightForWidth())
        self.extract_button1.setSizePolicy(sizePolicy)
        self.extract_button1.setMinimumSize(QtCore.QSize(0, 100))
        self.extract_button1.setMaximumSize(QtCore.QSize(80, 100))
        self.extract_button1.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 170, 170);\n"
"font: 9pt \"Britannic Bold\";")
        self.extract_button1.setObjectName("extract_button1")
        self.horizontalLayout_4.addWidget(self.extract_button1)
        self.text1 = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text1.sizePolicy().hasHeightForWidth())
        self.text1.setSizePolicy(sizePolicy)
        self.text1.setMinimumSize(QtCore.QSize(0, 200))
        self.text1.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 25 11pt \"Microsoft YaHei\";")
        self.text1.setObjectName("text1")
        self.horizontalLayout_4.addWidget(self.text1)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_3.addWidget(self.scrollArea)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem4 = QtWidgets.QSpacerItem(500, 55, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem5 = QtWidgets.QSpacerItem(384, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout.addItem(spacerItem5)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.mark_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mark_label.sizePolicy().hasHeightForWidth())
        self.mark_label.setSizePolicy(sizePolicy)
        self.mark_label.setMaximumSize(QtCore.QSize(250, 50))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(3)
        self.mark_label.setFont(font)
        self.mark_label.setStyleSheet("font: 25 14pt \"Microsoft YaHei\";")
        self.mark_label.setObjectName("mark_label")
        self.horizontalLayout.addWidget(self.mark_label)
        self.splitter_4 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_4.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_4.setObjectName("splitter_4")
        self.star1 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star1.sizePolicy().hasHeightForWidth())
        self.star1.setSizePolicy(sizePolicy)
        self.star1.setMaximumSize(QtCore.QSize(50, 50))
        self.star1.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star1.setText("")
        self.star1.setObjectName("star1")
        self.star2 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star2.sizePolicy().hasHeightForWidth())
        self.star2.setSizePolicy(sizePolicy)
        self.star2.setMaximumSize(QtCore.QSize(50, 50))
        self.star2.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star2.setText("")
        self.star2.setObjectName("star2")
        self.star3 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star3.sizePolicy().hasHeightForWidth())
        self.star3.setSizePolicy(sizePolicy)
        self.star3.setMaximumSize(QtCore.QSize(50, 50))
        self.star3.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star3.setText("")
        self.star3.setObjectName("star3")
        self.star4 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star4.sizePolicy().hasHeightForWidth())
        self.star4.setSizePolicy(sizePolicy)
        self.star4.setMaximumSize(QtCore.QSize(50, 50))
        self.star4.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star4.setText("")
        self.star4.setObjectName("star4")
        self.star5 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star5.sizePolicy().hasHeightForWidth())
        self.star5.setSizePolicy(sizePolicy)
        self.star5.setMaximumSize(QtCore.QSize(50, 50))
        self.star5.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star5.setText("")
        self.star5.setObjectName("star5")
        self.horizontalLayout.addWidget(self.splitter_4)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem6 = QtWidgets.QSpacerItem(384, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout.addItem(spacerItem6)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        spacerItem7 = QtWidgets.QSpacerItem(500, 55, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem7)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.gridLayout.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        SearchEngine.setCentralWidget(self.centralwidget)

        self.retranslateUi(SearchEngine)
        self.search_button.clicked.connect(SearchEngine.search)
        self.star1.clicked.connect(SearchEngine.mark1)
        self.star2.clicked.connect(SearchEngine.mark2)
        self.star3.clicked.connect(SearchEngine.mark3)
        self.star4.clicked.connect(SearchEngine.mark4)
        self.star5.clicked.connect(SearchEngine.mark5)
        QtCore.QMetaObject.connectSlotsByName(SearchEngine)

    def retranslateUi(self, SearchEngine):
        _translate = QtCore.QCoreApplication.translate
        SearchEngine.setWindowTitle(_translate("SearchEngine", "MainWindow"))
        self.total_label.setText(_translate("SearchEngine", "共检索到1篇文档"))
        self.extract_button1.setText(_translate("SearchEngine", "Extract"))
        self.mark_label.setText(_translate("SearchEngine", "给这次搜索结果打分："))
import source_rc

class Ui_extract_widget(object):
    def setupUi(self, extract_widget):
        extract_widget.setObjectName("extract_widget")
        extract_widget.resize(674, 409)
        self.gridLayout = QtWidgets.QGridLayout(extract_widget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea = QtWidgets.QScrollArea(extract_widget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.content = QtWidgets.QWidget()
        self.content.setGeometry(QtCore.QRect(0, 0, 648, 319))
        self.content.setObjectName("content")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.content)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.detail_text = QtWidgets.QTextBrowser(self.content)
        self.detail_text.setObjectName("detail_text")
        self.gridLayout_2.addWidget(self.detail_text, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.content)
        self.verticalLayout_2.addWidget(self.scrollArea)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(50, 55, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.mark_label = QtWidgets.QLabel(extract_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mark_label.sizePolicy().hasHeightForWidth())
        self.mark_label.setSizePolicy(sizePolicy)
        self.mark_label.setMaximumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(3)
        self.mark_label.setFont(font)
        self.mark_label.setStyleSheet("font: 25 9pt \"Microsoft YaHei\";")
        self.mark_label.setObjectName("mark_label")
        self.horizontalLayout.addWidget(self.mark_label)
        self.splitter_4 = QtWidgets.QSplitter(extract_widget)
        self.splitter_4.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_4.setObjectName("splitter_4")
        self.star1 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star1.sizePolicy().hasHeightForWidth())
        self.star1.setSizePolicy(sizePolicy)
        self.star1.setMaximumSize(QtCore.QSize(30, 30))
        self.star1.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star1.setText("")
        self.star1.setObjectName("star1")
        self.star2 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star2.sizePolicy().hasHeightForWidth())
        self.star2.setSizePolicy(sizePolicy)
        self.star2.setMaximumSize(QtCore.QSize(30, 30))
        self.star2.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star2.setText("")
        self.star2.setObjectName("star2")
        self.star3 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star3.sizePolicy().hasHeightForWidth())
        self.star3.setSizePolicy(sizePolicy)
        self.star3.setMaximumSize(QtCore.QSize(30, 30))
        self.star3.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star3.setText("")
        self.star3.setObjectName("star3")
        self.star4 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star4.sizePolicy().hasHeightForWidth())
        self.star4.setSizePolicy(sizePolicy)
        self.star4.setMaximumSize(QtCore.QSize(30, 30))
        self.star4.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star4.setText("")
        self.star4.setObjectName("star4")
        self.star5 = QtWidgets.QPushButton(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.star5.sizePolicy().hasHeightForWidth())
        self.star5.setSizePolicy(sizePolicy)
        self.star5.setMaximumSize(QtCore.QSize(30, 30))
        self.star5.setStyleSheet("border-image: url(:/main/img/empty_star.png);")
        self.star5.setText("")
        self.star5.setObjectName("star5")
        self.horizontalLayout.addWidget(self.splitter_4)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.gridLayout.addLayout(self.verticalLayout_2, 0, 0, 1, 1)

        self.retranslateUi(extract_widget)
        self.star1.clicked.connect(extract_widget.mark1)
        self.star2.clicked.connect(extract_widget.mark2)
        self.star3.clicked.connect(extract_widget.mark3)
        self.star4.clicked.connect(extract_widget.mark4)
        self.star5.clicked.connect(extract_widget.mark5)
        QtCore.QMetaObject.connectSlotsByName(extract_widget)

    def retranslateUi(self, extract_widget):
        _translate = QtCore.QCoreApplication.translate
        extract_widget.setWindowTitle(_translate("extract_widget", "Form"))
        self.mark_label.setText(_translate("extract_widget", "给这次抽取结果打分："))
import source_rc

widget_list={}
myapp = QApplication(sys.argv)
w= MainWindow()
button_group = QtWidgets.QButtonGroup(w)
button_group.buttonClicked[int].connect(w.extract)
w.setWindowTitle('艺术类中文期刊信息检索与抽取系统')
w.show()
sys.exit(myapp.exec_())

